Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
                              lab5.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
                              twi_master.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                              lab5.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                              lab5.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(itoa.o)
                              lab5.o (itoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

twi_state           0x1               twi_master.o
twi_buf             0x2               twi_master.o
lcd_string_array    0x10              lab5.o
adc_result          0x2               lab5.o
lm73_wr_buf         0x2               lm73_functions_skel.o
twi_bus_addr        0x1               twi_master.o
lcd_str_l           0x10              lab5.o
lcd_str             0x10              lcd_functions.o
twi_msg_size        0x1               twi_master.o
fp_low_result       0x4               lab5.o
lm73_rd_buf         0x2               lm73_functions_skel.o
lcd_str_h           0x10              lab5.o
fp_adc_result       0x4               lab5.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
LOAD lab5.o
LOAD lcd_functions.o
LOAD lm73_functions_skel.o
LOAD twi_master.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1706
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c       0xa2 twi_master.o
 *(.progmem*)
                0x000000000000012e                . = ALIGN (0x2)
                0x000000000000012e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000012e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000012e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000012e                __ctors_start = .
 *(.ctors)
                0x000000000000012e                __ctors_end = .
                0x000000000000012e                __dtors_start = .
 *(.dtors)
                0x000000000000012e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000012e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
                0x000000000000012e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000012e        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000013a       0x1a /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                0x000000000000013a                __do_copy_data
 .init4         0x0000000000000154       0x10 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000154                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000164        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000000000016c        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
                0x000000000000016c                __vector_22
                0x000000000000016c                __vector_28
                0x000000000000016c                __vector_1
                0x000000000000016c                __vector_32
                0x000000000000016c                __vector_34
                0x000000000000016c                __vector_24
                0x000000000000016c                __vector_12
                0x000000000000016c                __bad_interrupt
                0x000000000000016c                __vector_6
                0x000000000000016c                __vector_31
                0x000000000000016c                __vector_3
                0x000000000000016c                __vector_23
                0x000000000000016c                __vector_30
                0x000000000000016c                __vector_25
                0x000000000000016c                __vector_11
                0x000000000000016c                __vector_13
                0x000000000000016c                __vector_17
                0x000000000000016c                __vector_19
                0x000000000000016c                __vector_7
                0x000000000000016c                __vector_27
                0x000000000000016c                __vector_5
                0x000000000000016c                __vector_4
                0x000000000000016c                __vector_9
                0x000000000000016c                __vector_2
                0x000000000000016c                __vector_21
                0x000000000000016c                __vector_29
                0x000000000000016c                __vector_8
                0x000000000000016c                __vector_26
                0x000000000000016c                __vector_14
                0x000000000000016c                __vector_10
                0x000000000000016c                __vector_16
                0x000000000000016c                __vector_18
                0x000000000000016c                __vector_20
 .text          0x0000000000000170      0x6ce lab5.o
                0x0000000000000170                var_bit_is_clr
                0x0000000000000188                debounceSwitch
                0x00000000000001c4                LEDSegment
                0x0000000000000238                position0
                0x0000000000000246                position1
                0x0000000000000274                buttonSense
                0x0000000000000280                segButtonOutputSet
                0x0000000000000294                segButtonInputSet
                0x00000000000002ae                segButtonInit
                0x00000000000002c2                tcnt0_init
                0x00000000000002dc                tcnt2_init
                0x00000000000002e8                tcnt1_init
                0x0000000000000306                tcnt3_init
                0x0000000000000340                timeExtract
                0x00000000000003b8                __vector_15
                0x0000000000000412                segmentDisplay
                0x00000000000004f0                spi_init
                0x0000000000000516                encoder_init
                0x000000000000051e                adc_get
                0x000000000000056c                encoderInput
                0x00000000000006cc                lcdInit
                0x00000000000007e4                lcdPutStr
 .text          0x000000000000083e      0x2b8 lcd_functions.o
                0x000000000000083e                strobe_lcd
                0x0000000000000850                clear_display
                0x0000000000000880                cursor_home
                0x00000000000008a4                home_line2
                0x00000000000008c8                fill_spaces
                0x0000000000000904                char2lcd
                0x0000000000000934                cursor_off
                0x0000000000000964                string2lcd
                0x00000000000009c0                lcd_init
 .text          0x0000000000000af6        0x2 lm73_functions_skel.o
                0x0000000000000af6                lm73_temp_convert
 .text          0x0000000000000af8      0x17a twi_master.o
                0x0000000000000af8                __vector_33
                0x0000000000000c14                twi_busy
                0x0000000000000c1c                twi_start_wr
                0x0000000000000c3e                twi_start_rd
                0x0000000000000c60                init_twi
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(itoa.o)
 .text          0x0000000000000c72        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000c72                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000c72      0x9d2 lab5.o
                0x0000000000000c72                main
 .text.libgcc.mul
                0x0000000000001644        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000001644       0x28 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000001644                __divmodhi4
                0x0000000000001644                _div
 .text.libgcc   0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x000000000000166c        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .text.libgcc   0x000000000000166c        0xc /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
                0x000000000000166c                __tablejump2__
                0x0000000000001670                __tablejump__
 .text.libgcc.prologue
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000001678        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000001678       0x28 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000001678                __udivmodhi4
 .text.libgcc   0x00000000000016a0        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000016a0        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000016a0        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000016a0        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000016a0        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.avr-libc
                0x00000000000016a0       0x42 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(itoa.o)
                0x00000000000016a0                itoa
 .text.avr-libc
                0x00000000000016e2       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(strrev.o)
                0x00000000000016e2                strrev
                0x0000000000001702                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001702        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                0x0000000000001702                exit
                0x0000000000001702                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001702        0x4 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001706                _etext = .

.data           0x0000000000800100       0x58 load address 0x0000000000001706
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x7 lab5.o
                0x0000000000800100                colon
                0x0000000000800101                sMinute
                0x0000000000800103                aMinute
                0x0000000000800105                prevEncoder1
                0x0000000000800106                prevEncoder0
 .data          0x0000000000800107        0x0 lcd_functions.o
 .data          0x0000000000800107        0x0 lm73_functions_skel.o
 .data          0x0000000000800107        0x0 twi_master.o
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(itoa.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800107       0x51 lab5.o
 *(.gnu.linkonce.d*)
                0x0000000000800158                . = ALIGN (0x2)
                0x0000000000800158                _edata = .
                0x0000000000800158                PROVIDE (__data_end, .)

.bss            0x0000000000800158       0x86
                0x0000000000800158                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800158       0x32 lab5.o
                0x0000000000800158                ten
                0x0000000000800159                one
                0x000000000080015a                alarmHour
                0x000000000080015c                alarmMinute
                0x000000000080015e                hTen
                0x0000000000800160                hOne
                0x0000000000800162                minTen
                0x0000000000800164                minOne
                0x0000000000800166                hour
                0x0000000000800168                minute
                0x000000000080016a                switch_count
                0x000000000080016c                count_7ms
                0x000000000080016d                snoozeFlag
                0x000000000080016e                alarming
                0x000000000080016f                sHour
                0x0000000000800171                aHour
                0x0000000000800173                encoder
                0x0000000000800174                b_past
                0x0000000000800175                a_past
                0x0000000000800176                b_current
                0x0000000000800177                a_current
                0x0000000000800178                dimFlag
                0x0000000000800179                i
 .bss           0x000000000080018a        0x0 lcd_functions.o
 .bss           0x000000000080018a        0x0 lm73_functions_skel.o
 .bss           0x000000000080018a        0x1 twi_master.o
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_tablejump.o)
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(itoa.o)
 .bss           0x000000000080018b        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080018b       0x3a lab5.o
                0x000000000080018b                lcd_string_array
                0x000000000080019b                adc_result
                0x000000000080019d                lcd_str_l
                0x00000000008001ad                fp_low_result
                0x00000000008001b1                lcd_str_h
                0x00000000008001c1                fp_adc_result
 COMMON         0x00000000008001c5       0x10 lcd_functions.o
                0x00000000008001c5                lcd_str
 COMMON         0x00000000008001d5        0x4 lm73_functions_skel.o
                0x00000000008001d5                lm73_wr_buf
                0x00000000008001d7                lm73_rd_buf
 COMMON         0x00000000008001d9        0x5 twi_master.o
                0x00000000008001d9                twi_state
                0x00000000008001da                twi_buf
                0x00000000008001dc                twi_bus_addr
                0x00000000008001dd                twi_msg_size
                0x00000000008001de                PROVIDE (__bss_end, .)
                0x0000000000001706                __data_load_start = LOADADDR (.data)
                0x000000000000175e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001de        0x0
                0x00000000008001de                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001de                PROVIDE (__noinit_end, .)
                0x00000000008001de                _end = .
                0x00000000008001de                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x453c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o
 .stab          0x00000000000006cc     0x26f4 lab5.o
                                       0x2700 (size before relaxing)
 .stab          0x0000000000002dc0      0xb28 lcd_functions.o
                                        0xd5c (size before relaxing)
 .stab          0x00000000000038e8      0x348 lm73_functions_skel.o
                                        0x510 (size before relaxing)
 .stab          0x0000000000003c30      0x684 twi_master.o
                                        0x87c (size before relaxing)
 .stab          0x00000000000042b4      0x1b0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x0000000000004464       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000     0x15ce
 *(.stabstr)
 .stabstr       0x0000000000000000     0x15ce /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lab5.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 lcd_functions.o
 .comment       0x0000000000000000       0x12 lm73_functions_skel.o
 .comment       0x0000000000000000       0x12 twi_master.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab5.elf elf32-avr)
LOAD linker stubs
